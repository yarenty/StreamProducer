description = "Stream-Er => Stream Producer"

// The build script settings to fetch plugins and put them on classpath
buildscript {
    repositories {
        maven {
            url "http://repo1.maven.org/maven2/"
        }
        jcenter {
            url "http://jcenter.bintray.com/"
        }
        maven {
            url "http://plugins.gradle.org/m2/"
        }
        maven {
            name "lightbend-maven-releases"
            url "https://repo.lightbend.com/lightbend/maven-release"
        }
        ivy {
            name "lightbend-ivy-release"
            url "https://repo.lightbend.com/lightbend/ivy-releases"
            layout "ivy"
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:1.0.1"
        classpath "gradle.plugin.org.scoverage:gradle-scoverage:2.3.0"
    }
}

//local definitions
ext {
    scalaBinaryVersion = '2.11'
    scalaVersion = '2.11.8'
    junitVersion = '4.12'
    akkaVersion = "2.5.14"
    akkaHttpVersion = "10.1.3"

}

apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'scalaStyle'

group 'com.yarenty'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://repo1.maven.org/maven2/"
    }
    maven {
        url "http://repository.cloudera.com/artifactory/cloudera-repos/"
    }
    maven {
        url "http://repo.hortonworks.com/content/repositories/releases/"
    }
    maven {
        url "http://oss.sonatype.org/content/repositories/releases/"
    }
    maven {
        url "http://repository.apache.org/content/groups/snapshots"
    }
    maven {
        name "lightbend-maven-releases"
        url "https://repo.lightbend.com/lightbend/maven-release"
    }
    ivy {
        name "lightbend-ivy-release"
        url "https://repo.lightbend.com/lightbend/ivy-releases"
        layout "ivy"
    }
}

dependencies {
    compile "org.scala-lang:scala-library:$scalaVersion"
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'

    //InfluxDB  
    //@TODO:should change it to someting up-to-date or rewrite with akka (@see: no more spray)
    compile group: 'com.paulgoldbaum', name: "scala-influxdb-client_$scalaBinaryVersion", version: '0.6.1'
    
    compile group: "com.typesafe.akka", name: "akka-http_$scalaBinaryVersion", version: "$akkaHttpVersion"
    compile group: "com.typesafe.akka", name: "akka-actor_$scalaBinaryVersion", version: "$akkaVersion"
    compile group: "com.typesafe.akka", name: "akka-stream_$scalaBinaryVersion", version: "$akkaVersion"
    testCompile group: "ch.megard", name: "akka-http-cors_$scalaBinaryVersion", version: "0.3.0"
    
    testCompile "junit:junit:${junitVersion}"
    testCompile group: 'org.scalamock', name: "scalamock-scalatest-support_${scalaBinaryVersion}", version: '3.6.0'
    testCompile "org.scalatest:scalatest_${scalaBinaryVersion}:3.0.5"
    testCompile group: 'com.typesafe.akka', name: "akka-testkit_${scalaBinaryVersion}", version: '2.5.14'
    
}


scalaStyle {
    configLocation = "$rootDir/scalastyle-config.xml"
    includeTestSourceDirectory = true
    source = "src/main/scala"
    testSource = "src/test/scala"
    outputFile = "$buildDir/checkstyle-result.xml"
}

